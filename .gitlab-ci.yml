build:
  image: docker:dind
  stage: build
  script:
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME .

review-deploy:
  image: yourlabs/ansible
  stage: test
  environment:
    name: test/$CI_COMMIT_REF_NAME
    url: http://${CI_ENVIRONMENT_SLUG}.xdevops.ci.yourlabs.io
    on_stop: review-stop
  script:
    - mkdir -p ~/.ssh; echo "$ssh_key" > ~/.ssh/id_rsa; echo "$ssh_fingerprints" > ~/.ssh/known_hosts; chmod 700 ~/.ssh; chmod 600 ~/.ssh/*
    - export HOST=${CI_ENVIRONMENT_SLUG}.xdevops.ci.yourlabs.io
    - bigsudo
      yourlabs.compose
      image=$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
      pull=no
      compose=docker-compose.yml,docker-compose.ephemeral.yml
      project=$CI_ENVIRONMENT_SLUG
      lifetime=300
      xdevops@ci.yourlabs.io
  except:
    refs:
      - master

review-stop:
  stage: test
  image: yourlabs/python
  script:
  - docker-compose -p $CI_ENVIRONMENT_SLUG down -v --remove-orphans
  - docker-compose -p $CI_ENVIRONMENT_SLUG rm -fsv
  when: manual
  environment:
    action: stop
    name: test/$CI_COMMIT_REF_NAME
  except:
    refs:
      - master

deploy:
  image: yourlabs/python
  stage: deploy
  environment:
    name: demo
    url: https://xdevops.ci.yourlabs.io
  script:
    - mkdir -p ~/.ssh; echo "$ssh_key" > ~/.ssh/id_rsa; echo "$ssh_fingerprints" > ~/.ssh/known_hosts; chmod 700 ~/.ssh; chmod 600 ~/.ssh/*
    - export HOST=xdevops.ci.yourlabs.io
    - export PROTO=https
    - bigsudo
      yourlabs.compose
      image=$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
      pull=no
      compose=docker-compose.yml,docker-compose.persistent.yml
      home=/home/xdevops
      xdevops@ci.yourlabs.io
  only:
    refs:
      - master
      - staging
